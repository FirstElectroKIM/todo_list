{"ast":null,"code":"var _jsxFileName = \"D:\\\\firstelectro\\\\\\uCDA9\\uCCADict_\\uCDE8\\uCC3D\\uC5C5\\uAD50\\uC721\\\\20231020\\\\todo_list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n// camelcase -> 띄어쓰기가 필요한 곳에 대문자로 표시한다\n// ex) background-color -> backgroundColor\n//     font-size -> fontSize\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // react way\n  const [inputValue, setInputValue] = useState(\"\");\n  /**\n   * TODO object, 객체\n   * {\n   *  id: 중복되지 않는 id값, uuid 항상 고유한 키값이 나오는 암호화 로직을 갖고 있는 라이브러리\n   *  content: 할일에 대해 적은 내용 strign ('할일 1')\n   *  createdAt: 생성된 시간 number (0~9128439184921490)\n   *  isDone: 완료 여부 boolean (true, false)\n   * }\n   */\n\n  const [todos, setTodos] = useState([]);\n  console.log({\n    todos\n  });\n  // state 변화하는 값, 임시 값\n  // React -> state가 변할때마다 화면을 다시 그린다.\n  // [\"할일 1\", \"할일 2\"] -> [\"할일 1\", \"할일 2\", \"할일 3\"]];\n\n  return (\n    /*#__PURE__*/\n    // JSX (JS -> HTML)\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB098\\uB9CC\\uC758 To-do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \" \\uC815\\uB82C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sort,\n        onChange: e => setSort(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \" \\uC5C6\\uC74C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"createdAt\",\n          children: \" \\uCD5C\\uC2E0\\uC21C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"content\",\n          children: \" \\uAC00\\uB098\\uB2E4\\uC21C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          // Input의 제어권을 React(JS)가 가지고 있을 수 있게, state값을 주입했다.\n          value: inputValue\n          // Input의 값이 변하는 이벤트가 발생했을 때, 제어권을 가진 React(JS)의 state값을 변경한다.\n          ,\n          onChange: e => {\n            setInputValue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // spread 연산자\n\n            const newTodo = {\n              id: uuid(),\n              content: inputValue,\n              createdAt: Date.now(),\n              isDone: false\n            };\n            setTodos([...todos, newTodo]);\n            setInputValue(\"\");\n          },\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.isDone,\n          onChange: e => {\n            /**\n             * todos :\n             * { content : \"할일 1\"\n             * createdAt : 1697782607507\n             * id : \"38b5c80a-008a-47f4-81f1-bb50fa206c29\"\n             * isDone : false },\n             * 두번째 todo,\n             * 세번째 todo\n             */\n            const nextTodos = todos.map((todo, idx) => idx === index ? {\n              ...todo,\n              isDone: e.target.checked\n            } : todo);\n            setTodos(nextTodos);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: todo.isDone ? \"line-through\" : \"\"\n          },\n          children: todo.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"MaTlFAKntCxRs21boMprNydETvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["v4","uuid","useState","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","todos","setTodos","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","sort","onChange","e","setSort","target","onClick","newTodo","id","content","createdAt","Date","now","isDone","map","todo","index","type","checked","nextTodos","idx","style","textDecoration","_c","$RefreshReg$"],"sources":["D:/firstelectro/충청ict_취창업교육/20231020/todo_list/src/App.js"],"sourcesContent":["import { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n// camelcase -> 띄어쓰기가 필요한 곳에 대문자로 표시한다\n// ex) background-color -> backgroundColor\n//     font-size -> fontSize\nfunction App() {\n  // react way\n  const [inputValue, setInputValue] = useState(\"\");\n  /**\n   * TODO object, 객체\n   * {\n   *  id: 중복되지 않는 id값, uuid 항상 고유한 키값이 나오는 암호화 로직을 갖고 있는 라이브러리\n   *  content: 할일에 대해 적은 내용 strign ('할일 1')\n   *  createdAt: 생성된 시간 number (0~9128439184921490)\n   *  isDone: 완료 여부 boolean (true, false)\n   * }\n   */\n\n  const [todos, setTodos] = useState([]);\n  console.log({ todos });\n  // state 변화하는 값, 임시 값\n  // React -> state가 변할때마다 화면을 다시 그린다.\n  // [\"할일 1\", \"할일 2\"] -> [\"할일 1\", \"할일 2\", \"할일 3\"]];\n\n  return (\n    // JSX (JS -> HTML)\n    <div className=\"App\">\n      <h1>나만의 To-do List</h1>\n      <label htmlFor=\"sort\"> 정렬 </label>\n      <select value={sort} onChange={(e) => setSort(e.target.value)}> \n        <option value=\"none\"> 없음 </option>\n        <option value=\"createdAt\"> 최신순 </option>\n        <option value=\"content\"> 가나다순 </option>\n      </select>\n      <div>\n        {/* () => {} */}\n        <input\n          // Input의 제어권을 React(JS)가 가지고 있을 수 있게, state값을 주입했다.\n          value={inputValue}\n          // Input의 값이 변하는 이벤트가 발생했을 때, 제어권을 가진 React(JS)의 state값을 변경한다.\n          onChange={(e) => {\n            setInputValue(e.target.value);\n          }}\n        />\n        <button\n          onClick={() => {\n            // spread 연산자\n\n            const newTodo = {\n              id: uuid(),\n              content: inputValue,\n              createdAt: Date.now(),\n              isDone: false,\n            };\n            setTodos([...todos, newTodo]);\n            setInputValue(\"\");\n          }}\n        >\n          추가\n        </button>\n      </div>\n\n      {/* DRY Don't Repeat Yourself */}\n      {/* [할일 1, 할일 2, 할일 3]  */}\n      {todos.map((todo, index) => (\n        <div key={todo.id}>\n          <input\n            type=\"checkbox\"\n            checked={todo.isDone}\n            onChange={(e) => {\n              /**\n               * todos :\n               * { content : \"할일 1\"\n               * createdAt : 1697782607507\n               * id : \"38b5c80a-008a-47f4-81f1-bb50fa206c29\"\n               * isDone : false },\n               * 두번째 todo,\n               * 세번째 todo\n               */\n              const nextTodos = todos.map((todo, idx) =>\n                idx === index ? { ...todo, isDone: e.target.checked } : todo\n              );\n              setTodos(nextTodos);\n            }}\n          />\n          <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>\n            {todo.content}\n          </span>\n          <button>삭제</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}